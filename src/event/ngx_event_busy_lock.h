begin_unit|revision:1.0.0;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) Igor Sysoev  * Copyright (C) Nginx, Inc.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NGX_EVENT_BUSY_LOCK_H_INCLUDED_
end_ifndef

begin_define
DECL|macro|_NGX_EVENT_BUSY_LOCK_H_INCLUDED_
define|#
directive|define
name|_NGX_EVENT_BUSY_LOCK_H_INCLUDED_
end_define

begin_include
include|#
directive|include
file|<ngx_config.h>
end_include

begin_include
include|#
directive|include
file|<ngx_core.h>
end_include

begin_include
include|#
directive|include
file|<ngx_event.h>
end_include

begin_typedef
DECL|typedef|ngx_event_busy_lock_ctx_t
typedef|typedef
name|struct
name|ngx_event_busy_lock_ctx_s
name|ngx_event_busy_lock_ctx_t
typedef|;
end_typedef

begin_struct
DECL|struct|ngx_event_busy_lock_ctx_s
struct|struct
name|ngx_event_busy_lock_ctx_s
block|{
DECL|member|event
name|ngx_event_t
modifier|*
name|event
decl_stmt|;
DECL|member|handler
name|ngx_event_handler_pt
name|handler
decl_stmt|;
DECL|member|data
name|void
modifier|*
name|data
decl_stmt|;
DECL|member|timer
name|ngx_msec_t
name|timer
decl_stmt|;
DECL|member|locked
name|unsigned
name|locked
range|:
literal|1
decl_stmt|;
DECL|member|waiting
name|unsigned
name|waiting
range|:
literal|1
decl_stmt|;
DECL|member|cache_updated
name|unsigned
name|cache_updated
range|:
literal|1
decl_stmt|;
DECL|member|md5
name|char
modifier|*
name|md5
decl_stmt|;
DECL|member|slot
name|ngx_int_t
name|slot
decl_stmt|;
DECL|member|next
name|ngx_event_busy_lock_ctx_t
modifier|*
name|next
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
DECL|struct|__anon28b0c93c0108
typedef|typedef
struct|struct
block|{
DECL|member|md5_mask
name|u_char
modifier|*
name|md5_mask
decl_stmt|;
DECL|member|md5
name|char
modifier|*
name|md5
decl_stmt|;
DECL|member|cacheable
name|ngx_uint_t
name|cacheable
decl_stmt|;
DECL|member|busy
name|ngx_uint_t
name|busy
decl_stmt|;
DECL|member|max_busy
name|ngx_uint_t
name|max_busy
decl_stmt|;
DECL|member|waiting
name|ngx_uint_t
name|waiting
decl_stmt|;
DECL|member|max_waiting
name|ngx_uint_t
name|max_waiting
decl_stmt|;
DECL|member|events
name|ngx_event_busy_lock_ctx_t
modifier|*
name|events
decl_stmt|;
DECL|member|last
name|ngx_event_busy_lock_ctx_t
modifier|*
name|last
decl_stmt|;
if|#
directive|if
operator|(
name|NGX_THREADS
operator|)
DECL|member|mutex
name|ngx_mutex_t
modifier|*
name|mutex
decl_stmt|;
endif|#
directive|endif
DECL|typedef|ngx_event_busy_lock_t
block|}
name|ngx_event_busy_lock_t
typedef|;
end_typedef

begin_function_decl
name|ngx_int_t
name|ngx_event_busy_lock
parameter_list|(
name|ngx_event_busy_lock_t
modifier|*
name|bl
parameter_list|,
name|ngx_event_busy_lock_ctx_t
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ngx_int_t
name|ngx_event_busy_lock_cacheable
parameter_list|(
name|ngx_event_busy_lock_t
modifier|*
name|bl
parameter_list|,
name|ngx_event_busy_lock_ctx_t
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ngx_event_busy_unlock
parameter_list|(
name|ngx_event_busy_lock_t
modifier|*
name|bl
parameter_list|,
name|ngx_event_busy_lock_ctx_t
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ngx_event_busy_lock_cancel
parameter_list|(
name|ngx_event_busy_lock_t
modifier|*
name|bl
parameter_list|,
name|ngx_event_busy_lock_ctx_t
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NGX_EVENT_BUSY_LOCK_H_INCLUDED_ */
end_comment

end_unit

