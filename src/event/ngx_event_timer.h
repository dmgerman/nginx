begin_unit|revision:1.0.0;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) Igor Sysoev  * Copyright (C) Nginx, Inc.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_NGX_EVENT_TIMER_H_INCLUDED_
end_ifndef

begin_define
DECL|macro|_NGX_EVENT_TIMER_H_INCLUDED_
define|#
directive|define
name|_NGX_EVENT_TIMER_H_INCLUDED_
end_define

begin_include
include|#
directive|include
file|<ngx_config.h>
end_include

begin_include
include|#
directive|include
file|<ngx_core.h>
end_include

begin_include
include|#
directive|include
file|<ngx_event.h>
end_include

begin_define
DECL|macro|NGX_TIMER_INFINITE
define|#
directive|define
name|NGX_TIMER_INFINITE
value|(ngx_msec_t) -1
end_define

begin_define
DECL|macro|NGX_TIMER_LAZY_DELAY
define|#
directive|define
name|NGX_TIMER_LAZY_DELAY
value|300
end_define

begin_function_decl
name|ngx_int_t
name|ngx_event_timer_init
parameter_list|(
name|ngx_log_t
modifier|*
name|log
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ngx_msec_t
name|ngx_event_find_timer
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ngx_event_expire_timers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|ngx_int_t
name|ngx_event_no_timers_left
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|ngx_rbtree_t
name|ngx_event_timer_rbtree
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
name|ngx_inline
name|void
DECL|function|ngx_event_del_timer (ngx_event_t * ev)
name|ngx_event_del_timer
parameter_list|(
name|ngx_event_t
modifier|*
name|ev
parameter_list|)
block|{
name|ngx_log_debug2
argument_list|(
name|NGX_LOG_DEBUG_EVENT
argument_list|,
name|ev
operator|->
name|log
argument_list|,
literal|0
argument_list|,
literal|"event timer del: %d: %M"
argument_list|,
name|ngx_event_ident
argument_list|(
name|ev
operator|->
name|data
argument_list|)
argument_list|,
name|ev
operator|->
name|timer
operator|.
name|key
argument_list|)
expr_stmt|;
name|ngx_rbtree_delete
argument_list|(
operator|&
name|ngx_event_timer_rbtree
argument_list|,
operator|&
name|ev
operator|->
name|timer
argument_list|)
expr_stmt|;
if|#
directive|if
operator|(
name|NGX_DEBUG
operator|)
name|ev
operator|->
name|timer
operator|.
name|left
operator|=
name|NULL
expr_stmt|;
name|ev
operator|->
name|timer
operator|.
name|right
operator|=
name|NULL
expr_stmt|;
name|ev
operator|->
name|timer
operator|.
name|parent
operator|=
name|NULL
expr_stmt|;
endif|#
directive|endif
name|ev
operator|->
name|timer_set
operator|=
literal|0
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|ngx_inline
name|void
DECL|function|ngx_event_add_timer (ngx_event_t * ev,ngx_msec_t timer)
name|ngx_event_add_timer
parameter_list|(
name|ngx_event_t
modifier|*
name|ev
parameter_list|,
name|ngx_msec_t
name|timer
parameter_list|)
block|{
name|ngx_msec_t
name|key
decl_stmt|;
name|ngx_msec_int_t
name|diff
decl_stmt|;
name|key
operator|=
name|ngx_current_msec
operator|+
name|timer
expr_stmt|;
if|if
condition|(
name|ev
operator|->
name|timer_set
condition|)
block|{
comment|/*          * Use a previous timer value if difference between it and a new          * value is less than NGX_TIMER_LAZY_DELAY milliseconds: this allows          * to minimize the rbtree operations for fast connections.          */
name|diff
operator|=
operator|(
name|ngx_msec_int_t
operator|)
operator|(
name|key
operator|-
name|ev
operator|->
name|timer
operator|.
name|key
operator|)
expr_stmt|;
if|if
condition|(
name|ngx_abs
argument_list|(
name|diff
argument_list|)
operator|<
name|NGX_TIMER_LAZY_DELAY
condition|)
block|{
name|ngx_log_debug3
argument_list|(
name|NGX_LOG_DEBUG_EVENT
argument_list|,
name|ev
operator|->
name|log
argument_list|,
literal|0
argument_list|,
literal|"event timer: %d, old: %M, new: %M"
argument_list|,
name|ngx_event_ident
argument_list|(
name|ev
operator|->
name|data
argument_list|)
argument_list|,
name|ev
operator|->
name|timer
operator|.
name|key
argument_list|,
name|key
argument_list|)
expr_stmt|;
return|return;
block|}
name|ngx_del_timer
argument_list|(
name|ev
argument_list|)
expr_stmt|;
block|}
name|ev
operator|->
name|timer
operator|.
name|key
operator|=
name|key
expr_stmt|;
name|ngx_log_debug3
argument_list|(
name|NGX_LOG_DEBUG_EVENT
argument_list|,
name|ev
operator|->
name|log
argument_list|,
literal|0
argument_list|,
literal|"event timer add: %d: %M:%M"
argument_list|,
name|ngx_event_ident
argument_list|(
name|ev
operator|->
name|data
argument_list|)
argument_list|,
name|timer
argument_list|,
name|ev
operator|->
name|timer
operator|.
name|key
argument_list|)
expr_stmt|;
name|ngx_rbtree_insert
argument_list|(
operator|&
name|ngx_event_timer_rbtree
argument_list|,
operator|&
name|ev
operator|->
name|timer
argument_list|)
expr_stmt|;
name|ev
operator|->
name|timer_set
operator|=
literal|1
expr_stmt|;
block|}
end_function

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NGX_EVENT_TIMER_H_INCLUDED_ */
end_comment

end_unit

