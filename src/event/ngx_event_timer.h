begin_unit|revision:1.0.0;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|_NGX_EVENT_TIMER_H_INCLUDED_
end_ifndef

begin_define
DECL|macro|_NGX_EVENT_TIMER_H_INCLUDED_
define|#
directive|define
name|_NGX_EVENT_TIMER_H_INCLUDED_
end_define

begin_include
include|#
directive|include
file|<ngx_config.h>
end_include

begin_include
include|#
directive|include
file|<ngx_log.h>
end_include

begin_include
include|#
directive|include
file|<ngx_connection.h>
end_include

begin_include
include|#
directive|include
file|<ngx_event.h>
end_include

begin_function_decl
name|int
name|ngx_event_init_timer
parameter_list|(
name|ngx_log_t
modifier|*
name|log
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ngx_event_add_timer
parameter_list|(
name|ngx_event_t
modifier|*
name|ev
parameter_list|,
name|ngx_msec_t
name|timer
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|ngx_event_t
modifier|*
name|ngx_timer_queue
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|ngx_timer_hash_size
decl_stmt|;
end_decl_stmt

begin_function
DECL|function|ngx_event_find_timer ()
name|ngx_inline
specifier|static
name|int
name|ngx_event_find_timer
parameter_list|()
block|{
name|int
name|i
decl_stmt|;
name|ngx_msec_t
name|timer
decl_stmt|;
name|timer
operator|=
name|NGX_MAX_MSEC
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|ngx_timer_hash_size
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|ngx_timer_queue
index|[
name|i
index|]
operator|.
name|timer_next
operator|==
operator|&
name|ngx_timer_queue
index|[
name|i
index|]
condition|)
block|{
continue|continue;
block|}
if|if
condition|(
name|timer
operator|>
name|ngx_timer_queue
index|[
name|i
index|]
operator|.
name|timer_next
operator|->
name|timer_delta
condition|)
block|{
name|timer
operator|=
name|ngx_timer_queue
index|[
name|i
index|]
operator|.
name|timer_next
operator|->
name|timer_delta
expr_stmt|;
block|}
block|}
if|if
condition|(
name|timer
operator|==
name|NGX_MAX_MSEC
condition|)
block|{
return|return
literal|0
return|;
block|}
else|else
block|{
return|return
name|timer
return|;
block|}
block|}
end_function

begin_function
DECL|function|ngx_event_del_timer (ngx_event_t * ev)
name|ngx_inline
specifier|static
name|void
name|ngx_event_del_timer
parameter_list|(
name|ngx_event_t
modifier|*
name|ev
parameter_list|)
block|{
if|#
directive|if
operator|(
name|NGX_DEBUG_EVENT
operator|)
comment|/* STUB - we can not cast (ngx_connection_t *) here */
name|ngx_log_debug
argument_list|(
name|ev
operator|->
name|log
argument_list|,
literal|"del timer: %d"
name|_
operator|*
operator|(
name|int
operator|*
operator|)
operator|(
name|ev
operator|->
name|data
operator|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
if|if
condition|(
name|ev
operator|->
name|timer_prev
condition|)
block|{
name|ev
operator|->
name|timer_prev
operator|->
name|timer_next
operator|=
name|ev
operator|->
name|timer_next
expr_stmt|;
block|}
if|if
condition|(
name|ev
operator|->
name|timer_next
condition|)
block|{
name|ev
operator|->
name|timer_next
operator|->
name|timer_delta
operator|+=
name|ev
operator|->
name|timer_delta
expr_stmt|;
name|ev
operator|->
name|timer_next
operator|->
name|timer_prev
operator|=
name|ev
operator|->
name|timer_prev
expr_stmt|;
name|ev
operator|->
name|timer_next
operator|=
name|NULL
expr_stmt|;
block|}
if|if
condition|(
name|ev
operator|->
name|timer_prev
condition|)
block|{
name|ev
operator|->
name|timer_prev
operator|=
name|NULL
expr_stmt|;
block|}
block|}
end_function

begin_endif
endif|#
directive|endif
endif|_NGX_EVENT_TIMER_H_INCLUDED_
end_endif

end_unit

