begin_unit|revision:1.0.0;language:C;cregit-version:0.0.1
begin_ifndef
ifndef|#
directive|ifndef
name|_NGX_FILE_H_INCLUDED_
end_ifndef

begin_define
DECL|macro|_NGX_FILE_H_INCLUDED_
define|#
directive|define
name|_NGX_FILE_H_INCLUDED_
end_define

begin_include
include|#
directive|include
file|<ngx_config.h>
end_include

begin_include
include|#
directive|include
file|<ngx_core.h>
end_include

begin_struct
DECL|struct|ngx_file_s
struct|struct
name|ngx_file_s
block|{
DECL|member|fd
name|ngx_fd_t
name|fd
decl_stmt|;
DECL|member|name
name|ngx_str_t
name|name
decl_stmt|;
DECL|member|info
name|ngx_file_info_t
name|info
decl_stmt|;
DECL|member|offset
name|off_t
name|offset
decl_stmt|;
DECL|member|log
name|ngx_log_t
modifier|*
name|log
decl_stmt|;
DECL|member|info_valid
name|unsigned
name|info_valid
range|:
literal|1
decl_stmt|;
block|}
struct|;
end_struct

begin_typedef
DECL|struct|__anon2b8a8f8a0108
typedef|typedef
struct|struct
block|{
DECL|member|name
name|ngx_str_t
name|name
decl_stmt|;
DECL|member|len
name|int
name|len
decl_stmt|;
DECL|member|level
name|int
name|level
index|[
literal|3
index|]
decl_stmt|;
DECL|typedef|ngx_path_t
block|}
name|ngx_path_t
typedef|;
end_typedef

begin_typedef
DECL|struct|__anon2b8a8f8a0208
typedef|typedef
struct|struct
block|{
DECL|member|file
name|ngx_file_t
name|file
decl_stmt|;
DECL|member|offset
name|off_t
name|offset
decl_stmt|;
DECL|member|path
name|ngx_path_t
modifier|*
name|path
decl_stmt|;
DECL|member|pool
name|ngx_pool_t
modifier|*
name|pool
decl_stmt|;
DECL|member|warn
name|char
modifier|*
name|warn
decl_stmt|;
DECL|member|persistent
name|unsigned
name|persistent
range|:
literal|1
decl_stmt|;
DECL|typedef|ngx_temp_file_t
block|}
name|ngx_temp_file_t
typedef|;
end_typedef

begin_function_decl
name|int
name|ngx_write_chain_to_temp_file
parameter_list|(
name|ngx_temp_file_t
modifier|*
name|tf
parameter_list|,
name|ngx_chain_t
modifier|*
name|chain
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ngx_create_temp_file
parameter_list|(
name|ngx_file_t
modifier|*
name|file
parameter_list|,
name|ngx_path_t
modifier|*
name|path
parameter_list|,
name|ngx_pool_t
modifier|*
name|pool
parameter_list|,
name|int
name|persistent
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ngx_create_hashed_filename
parameter_list|(
name|ngx_file_t
modifier|*
name|file
parameter_list|,
name|ngx_path_t
modifier|*
name|path
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ngx_create_path
parameter_list|(
name|ngx_file_t
modifier|*
name|file
parameter_list|,
name|ngx_path_t
modifier|*
name|path
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|ngx_init_temp_number
parameter_list|()
function_decl|;
end_function_decl

begin_function_decl
name|int
name|ngx_next_temp_number
parameter_list|(
name|int
name|collision
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|ngx_conf_set_path_slot
parameter_list|(
name|ngx_conf_t
modifier|*
name|cf
parameter_list|,
name|ngx_command_t
modifier|*
name|cmd
parameter_list|,
name|void
modifier|*
name|conf
parameter_list|)
function_decl|;
end_function_decl

begin_define
DECL|macro|ngx_conf_merge_path_value (conf,prev,path,l1,l2,l3,pool)
define|#
directive|define
name|ngx_conf_merge_path_value
parameter_list|(
name|conf
parameter_list|,
name|prev
parameter_list|,
name|path
parameter_list|,
name|l1
parameter_list|,
name|l2
parameter_list|,
name|l3
parameter_list|,
name|pool
parameter_list|)
define|\
value|if (conf == NULL) {                                                      \         if (prev == NULL) {                                                  \             ngx_test_null(conf, ngx_palloc(pool, sizeof(ngx_path_t)), NULL); \             conf->name.len = sizeof(path) - 1;                               \             conf->name.data = path;                                          \             conf->level[0] = l1;                                             \             conf->level[1] = l2;                                             \             conf->level[2] = l3;                                             \             conf->len = l1 + l2 + l3 + (l1 ? 1:0) + (l2 ? 1:0) + (l3 ? 1:0); \         } else {                                                             \             conf = prev;                                                     \         }                                                                    \     }
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _NGX_FILE_H_INCLUDED_ */
end_comment

end_unit

